namespace tests
  @SGNode("NodeExample")
  @suite
  class NodeExampleTests extends rooibos.BaseTestSuite
    protected override function setup()
      m.setupThing = "something created during setup"
    end function

    protected override function beforeEach()
      m.beforeEachThing = "something created beforeEach"
    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    @describe("tests methods present on the node")
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    @it("HelloFromNode")
    function _()
      'bs:disable-next-line
      text = HelloFromNode("georgejecook", 12)
      m.AssertEqual(text, "HELLO georgejecook" + " aged:" + stri(12))
      m.done()
    end function

    @it("HelloFromNode with params")
    @onlyparams("jon", 40)
    @params("ringo", 23)
    @params("ringo", 50)
    @params("ringo", 24)
    @params("george", 40)
    @params("paul", 50)
    function _(name, age)
      'bs:disable-next-line
      text = HelloFromNode(name, age)
      m.AssertEqual(text, "HELLO " + name + " age:" + stri(age))
      m.timer = createObject("roSGNode", "Timer")
      m.timer.duration = 2
      m.timer.observeFieldScoped("fire", "OnTimer")
      m.timer.control = "start"
    end function
  end class
end namespace

function OnTimer()
  ? " TIMER IS FIRED"
  m.testSuite.done()
end function